// Copyright 2015 Google Inc. All Rights Reserved.

/*
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Authors:
 *   Ariel Shaqed (Scolnicov) <arielshaqed+netperf@google.com>
 *   Yosef Heskia <yosih+netperfgoogle.com>
 */

syntax = "proto2";

package google.internal.cloudlatencytest.v2;

option java_package = "com.google.internal.cloudlatencytest.v2";


// A simple message representing an integer measurement.
message IntValue {
  // The (unique) label of the measurement.
  optional string label = 1;

  // The int value
  optional int64 value = 2;
}

// A simple message representing a double measurements.
message DoubleValue {
  // The (unique) label of the measurement.
  optional string label = 1;

  // The float value.
  optional float value = 2;
}

// A simple message representing a string measurements.
message StringValue {
  // The (unique) label of the measurement.
  optional string label = 1;

  // The value.
  optional string value = 2;
}

// Collection of the samples, string data sampled at a given time.
message Stats {
  // Sample time.
  optional double time = 1;

  // The list of the int/float measurements.
  repeated IntValue int_values = 2;

  // The list of the int/float measurements.
  repeated DoubleValue double_values = 3;

  // The list of annotations.
  repeated StringValue string_values = 4;
}

// Aggregated report of multiple Stats
message AggregatedStats {
  // A collection of reported stats.
  repeated Stats stats = 1;
}

// Reply for the stats reporting rpc.
message StatsReply {
  // Debug data for testing purpuses.
  optional string test_value = 99;
}

// Reply for the aggregated stats reporting rpc.
message AggregatedStatsReply {
  // Debug data for testing purpuses.
  optional string test_value = 99;
}
