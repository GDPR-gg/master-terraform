# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: mghp-backend
  labels:
    app: magic-github-proxy
spec:
  type: NodePort
  selector:
    app: magic-github-proxy
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: magic-github-proxy-deployment
  labels:
    app: magic-github-proxy
spec:
  # We can actually scale this up to however many we want... no state is held
  # replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: magic-github-proxy
    spec:
      containers:
      - name: esp
        image: gcr.io/endpoints-release/endpoints-runtime:1
        args: [
          "--http_port=8080", #http
          "--service=SERVICE_NAME",
          "--backend=http://127.0.0.1:5000",
          "--healthz=_healthz"
        ]
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: "/_healthz"
            port: 8080
          initialDelaySeconds: 30
      - name: magic-github-proxy
        image: gcr.io/PROJECT_ID/magic-github-proxy:BUILD_ID
        imagePullPolicy: Always
        command: [
          "python",
          "main.py",
          "--port",
          "5000",
          "--project-id",
          "PROJECT_ID",
          "--kms-location",
          "KMS_LOCATION",
          "--kms-key-ring",
          "KMS_KEY_RING",
          "--kms-key",
          "KMS_KEY",
          "--bucket-name",
          "BUCKET_NAME",
          "--pri",
          "PRIVATE_FILE",
          "--cer",
          "CERTIFICATE_FILE"
        ]
        ports:
          - containerPort: 5000
        volumeMounts:
          - name: gcp-sa
            mountPath: /var/secrets/google
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
      volumes:
        - name: gcp-sa
          secret:
            secretName: service-account-magic-github-proxy
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mghp-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: magic-github-proxy-ip
    networking.gke.io/managed-certificates: magic-github-proxy-cert
  labels:
    app: magic-github-proxy
spec:
  backend:
    serviceName: mghp-backend
    servicePort: 8080
---
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: magic-github-proxy-cert
spec:
  domains:
    - magic-github-proxy.endpoints.PROJECT_ID.cloud.goog
