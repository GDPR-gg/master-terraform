# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
# Build Samplr
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/samplrd:$BUILD_ID','-f', 'samplr/samplrd/Dockerfile', '.']
  id: 'samplr-build'
  waitFor: ['-']

# Push Samplr to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/samplrd:$BUILD_ID"]
  waitFor: ['samplr-build']
  id: 'samplr-push'

# Build samplr-rtr
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/samplr-rtr:$BUILD_ID','-f', 'samplr/samplr-rtr/Dockerfile', '.']
  id: 'samplr-rtr-build'
  waitFor: ['-']

# Push samplr-rtr to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/samplr-rtr:$BUILD_ID"]
  waitFor: ['samplr-rtr-build']
  id: 'samplr-rtr-push'

# Build samplr-sprvsr
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/samplr-sprvsr:$BUILD_ID','-f', 'samplr/samplr-sprvsr/Dockerfile', '.']
  id: 'samplr-sprvsr-build'
  waitFor: ['-']

# Push samplr-sprvsr to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/samplr-sprvsr:$BUILD_ID"]
  waitFor: ['samplr-sprvsr-build']
  id: 'samplr-sprvsr-push'


# Prepare Kubernetes Manifest
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'k8s-manifest-prep'
  waitFor: ['-'] # Start immediately
  args:
  - '-e'
  - '-c'
  - |
    # Dynamically create service name based on the current project ID
    SERVICE_NAME=samplr.endpoints.$PROJECT_ID.cloud.goog

    # Deploy to Cloud Endpoints (note that some escaping is necessary
    # for bash variable references)
    #sed s/SERVICE_NAME/$$SERVICE_NAME/g api_config.yaml > target/api_config.yaml && \
    #  gcloud endpoints services deploy target/api_descriptor.pb target/api_config.yaml

    # Obtain the service config ID created by the deployment to Cloud Endpoints
    SERVICE_CONFIG_ID=`gcloud endpoints services describe $$SERVICE_NAME --format=value\(serviceConfig.id\)`
    # Substitute variables in Kubernetes manifest
    mkdir -p target
    cat samplr/kubernetes/deployment.yaml | \
      sed s/BUILD_ID/$BUILD_ID/g | \
      sed s/PROJECT_ID/$PROJECT_ID/g | \
      sed s/SERVICE_NAME/$$SERVICE_NAME/g | \
      sed s/SERVICE_CONFIG_ID/$$SERVICE_CONFIG_ID/g | \
      sed s/SETTINGS_BUCKET/$_BUCKET_NAME/g | \
      sed s/REPOS_FILE/$_REPO_FILE_NAME/g | \
      sed s/SERVICE_ACCOUNT_SECRET_NAME/$_SERVICE_ACCOUNT_SECRET/g \
      > target/deployment.yaml

# Perform Kubernetes Deployment
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  id: 'k8s-push'
  waitFor: ['k8s-manifest-prep','samplr-push','samplr-rtr-push','samplr-sprvsr-push']
  args:
  - '-e'
  - '-c'
  - |
    gcloud container clusters get-credentials --project="$PROJECT_ID" --zone="$_ZONE" "$_CLUSTER"

    kubectl apply -f target/deployment.yaml

images:
- 'gcr.io/$PROJECT_ID/samplrd'
- 'gcr.io/$PROJECT_ID/samplr-rtr'
- 'gcr.io/$PROJECT_ID/samplr-sprvsr'
