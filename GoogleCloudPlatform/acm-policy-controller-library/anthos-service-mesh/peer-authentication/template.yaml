# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: policystrictonly
spec:
  crd:
    spec:
      names:
        kind: PolicyStrictOnly
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package asm.guardrails.policystrictonly

        # VIOLATION spec.peers does not exist
        violation[{"msg": msg}] {          
          p := input.review.object

          p.apiVersion == "authentication.istio.io/v1alpha1"
          p.kind == "Policy"

          not p.spec["peers"]
          
          msg := "spec.peers does not exist"
        } 

        # VIOLATION spec.peers is []
        violation[{"msg": msg}] {
          p := input.review.object          

          p.apiVersion == "authentication.istio.io/v1alpha1"
          p.kind == "Policy"

          p.spec["peers"] == []
          
          msg := "spec.peers cannot be empty"
        } 

        # VIOLATION peer authentication does not set mTLS correctly
        violation[{"msg": msg}] {
          p := input.review.object

          p.apiVersion == "authentication.istio.io/v1alpha1"
          p.kind == "Policy"
          
          peer := p.spec.peers[_]

          # check for different valid configurations
          not peer.mtls.mode == "STRICT"
          not peer.mtls == {}
          not peer.mtls == null
          not peer.mtls

          msg := "spec.peers does not include STRICT mTLS settings"
        }
