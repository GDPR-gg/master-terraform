# Build and deploy CLV components and pipelines

steps:

# Build the image for custom build steps 
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'kfp-builder', '.']
  dir: 'deploy/kfp-builder'

# Build the base image for lightweight components
- name: 'gcr.io/cloud-builders/docker' 
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_BASE_IMAGE:$_TAG', '.'] 
  dir: 'pipelines/helper_components'

# Build the AutoML Tables components image
- name:  'gcr.io/cloud-builders/docker' 
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_AUTOML_TABLES_IMAGE:$_TAG', '.'] 
  dir: 'components/automl_tables'

# Update component specifications
#- name: 'gcr.io/cloud-builders/gcloud'
- name: 'kfp-builder'
  args: 
  - '-c'
  - |
    SED_SCRIPT='s/\([[:blank:]]*image:[[:blank:]]*\).*/\1gcr\.io\/$PROJECT_ID\/$_AUTOML_TABLES_IMAGE:$_TAG/'
    ls */component.yaml | xargs sed -i $$SED_SCRIPT 
  dir: 'components/automl_tables/specs'

# Update pipeline settings
#- name: 'gcr.io/cloud-builders/gcloud'
- name: 'kfp-builder'
  args: 
  - '-c'
  - |
    SED_SCRIPT='s/\([[:blank:]]*lightweight_components_base_image:[[:blank:]]*\).*/\1gcr\.io\/$PROJECT_ID\/$_BASE_IMAGE:$_TAG/'
    sed -i $$SED_SCRIPT settings.yaml
    SED_SCRIPT='s/\([[:blank:]]*query_template_uri:[[:blank:]]*\).*/\1gs:\/\/$_BUCKET_NAME\/$_ARTIFACTS_FOLDER\/query_template.sql.jinja/'
    sed -i $$SED_SCRIPT settings.yaml
  dir: 'pipelines'

# Compile the pipelines 
- name: 'kfp-builder'
  args:
  - '-c'
  - |
    dsl-compile --py  train_pipeline.py --output ${_TRAIN_PIPELINE}.tar.gz --disable-type-check
    dsl-compile --py  batch_predict_pipeline.py --output ${_PREDICT_PIPELINE}.tar.gz --disable-type-check
  dir: 'pipelines'

# Upload the pipeline packages to AI Platform Pipelines
- name: 'kfp-builder'
  args:
  - '-c'
  - |
    kfp --endpoint $_ENDPOINT pipeline upload -p ${_TRAIN_PIPELINE} ${_TRAIN_PIPELINE}.tar.gz
    kfp --endpoint $_ENDPOINT pipeline upload -p ${_PREDICT_PIPELINE} ${_PREDICT_PIPELINE}.tar.gz
  dir: 'pipelines'

# Copy build artifacts to GCS bucket
- name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gsutil cp *.tar.gz gs://$_BUCKET_NAME/$_PIPELINES_FOLDER
    gsutil cp artifacts/query_template.sql.jinja gs://$_BUCKET_NAME/$_ARTIFACTS_FOLDER/query_template.sql.jinja 
    gsutil cp gs://clv-datasets/transactions/* gs://$_BUCKET_NAME/$_SAMPLE_DATASET_FOLDER 
  dir: 'pipelines'

images: ['gcr.io/$PROJECT_ID/${_BASE_IMAGE}', 'gcr.io/$PROJECT_ID/${_AUTOML_TABLES_IMAGE}']

