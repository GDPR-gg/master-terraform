# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

substitutions:
  _GOOGLE_GROUPS_DOMAIN: ''
  _TF_ADMIN_BUCKET: ''
  _TF_ADMIN_PROJECT: ''
  _TF_VAR_BILLING_ACCOUNT: ''
  _TF_VAR_FOLDER_ID: ''
  _TF_VAR_FRONTEND_ZONE_DNS_NAME: ''
  _TF_VAR_GSUITE_ID: ''
  _TF_VAR_ORG_ID: ''
  _TF_VAR_PROJECT_PREFIX: ''
  _GCR_PROJECT_ID: ''
  _REPORTS_BUCKET: ''
  _DESTROY_INFRA_AFTER_CREATE: ''
  _INSPEC_PROFILE_DOCKER_TAG: ''

  
timeout: 3000s
steps:
- id: 'Build Infra'
  name: 'gcr.io/cloud-foundation-cicd/cft/developer-tools:0'
  waitFor: ['-']
  entrypoint: 'sh'
  env:
  - GOOGLE_GROUPS_DOMAIN=${_GOOGLE_GROUPS_DOMAIN}
  - TF_ADMIN_BUCKET=${_TF_ADMIN_BUCKET}
  - TF_ADMIN_PROJECT=${_TF_ADMIN_PROJECT}
  - TF_VAR_billing_account=${_TF_VAR_BILLING_ACCOUNT}
  - TF_VAR_folder_id=${_TF_VAR_FOLDER_ID}
  - TF_VAR_frontend_zone_dns_name=${_TF_VAR_FRONTEND_ZONE_DNS_NAME}
  - TF_VAR_gsuite_id=${_TF_VAR_GSUITE_ID}
  - TF_VAR_org_id=${_TF_VAR_ORG_ID}
  - TF_VAR_project_prefix=${_TF_VAR_PROJECT_PREFIX}
  args: 
  - '-c'
  - |
      cloud_build_service_account=`gcloud config get-value account`
      cp workstation.env.example workstation.env
      sed -i "s/YOUR_ORG_ID/${_TF_VAR_ORG_ID}/g" workstation.env
      sed -i "s/YOUR_GSUITE_ID/${_TF_VAR_GSUITE_ID}/g" workstation.env
      sed -i "s/YOUR_BILLING_ACCOUNT_ID/${_TF_VAR_BILLING_ACCOUNT}/g" workstation.env
      sed -i "s/YOUR_PROJECT_FOLDER/${_TF_VAR_FOLDER_ID}/g" workstation.env
      sed -i "s/demo-pci/${_TF_VAR_PROJECT_PREFIX}/g" workstation.env
      sed -i "/export TF_ADMIN_PROJECT/c\export TF_ADMIN_PROJECT=${_TF_ADMIN_PROJECT}" workstation.env
      sed -i "s/terraform-admin-<INSERT-RANDOM-IDENTIFIER-HERE>/${_TF_ADMIN_BUCKET}/g" workstation.env
      sed -i "/TF_VAR_frontend_zone_dns_name=/c\export TF_VAR_frontend_zone_dns_name=\"${_TF_VAR_FRONTEND_ZONE_DNS_NAME}\"" workstation.env
      sed -i "/GOOGLE_GROUPS_DOMAIN=/c\GOOGLE_GROUPS_DOMAIN=\"${_GOOGLE_GROUPS_DOMAIN}\"" workstation.env
      sed -i '/GOOGLE_APPLICATION_CREDENTIALS/d' workstation.env
      sed -i "/TF_VAR_terraform_service_account/c\export TF_VAR_terraform_service_account=\"serviceAccount:$cloud_build_service_account\"" workstation.env
      cat workstation.env
      source workstation.env
      ./_helpers/build-infra.sh -c

- id: 'Write input file'
  waitFor: ['Build Infra']
  name: gcr.io/cloud-foundation-cicd/cft/developer-tools:0
  entrypoint: '/bin/sh'
  args: 
    - '-c'
    - |
      cloud_build_service_account=`gcloud config get-value account`

      cat <<EOF > /workspace/inputs.yml
      gcp_project_id: "${_TF_VAR_PROJECT_PREFIX}-in-scope"
      gcp_gke_locations:
        - 'us-central1'
      gce_zones:
        - 'us-central1'
        - 'us-central1-a'
        - 'us-central1-b'
        - 'us-central1-c'
        - 'us-central1-d'
        - 'us-central1-e'
        - 'us-central1-f'
      cis_version: ""
      cis_url: ""
      fw_change_control_id_regex: 'CID:'
      fw_override_control_id_regex: 'CID:'
      logging_viewer_list: []
      logging_admin_list: []
      project_owners_list: ["serviceAccount:$cloud_build_service_account"]
      gcs_logging_buckets: []
      cai_inventory_bucket_name: ""
      cai_inventory_file_path: ""
      cai_inventory_age_seconds: 60
      gcs_pii_buckets: []
      kms_regions_list:
        - "us-central1"
      kms_admins_list: []
      kms_encrypters_list: []
      kms_decrypters_list: []
      kms_encrypterdecrypters_list: []
      kms_rotation_period_seconds: 7776000
      environment_label: 'env'
      memorystore_admins_list: []
      cloudsql_admins_list: []
      cloudsql_clients_list: []
      bq_admins_list: []
      spanner_admins_list: []
      environment_label: "goog-gke-node"
      allow_all_tcp_ports: []
      allow_all_udp_ports: []
      EOF
      cat /workspace/inputs.yml

- id: 'Run PCI Profile on in-scope project'
  waitFor: ['Write input file']
  name: gcr.io/${_GCR_PROJECT_ID}/inspec-gcp-pci-profile:${_INSPEC_PROFILE_DOCKER_TAG}
  entrypoint: '/bin/sh'
  args: 
    - '-c'
    - |
      inspec exec /share/. -t gcp:// \
      --input-file /workspace/inputs.yml \
      --reporter cli json:/workspace/pci_report.json html:/workspace/pci_report.html | tee out.json

- id: 'Store json Report'
  waitFor: ['Run PCI Profile on in-scope project']
  name: gcr.io/cloud-builders/gsutil
  args:
    - cp
    - /workspace/pci_report.json
    - gs://${_REPORTS_BUCKET}/pci_report-${BUILD_ID}.json

- id: 'Store HTML Report'
  waitFor: ['Run PCI Profile on in-scope project']
  name: gcr.io/cloud-builders/gsutil
  args:
    - cp
    - /workspace/pci_report.html
    - gs://${_REPORTS_BUCKET}/pci_report-${BUILD_ID}.html

- id: 'Destroy Infra'
  waitFor: ['Store HTML Report']
  name: gcr.io/cloud-foundation-cicd/cft/developer-tools:0
  entrypoint: '/bin/sh'
  args: 
    - '-c'
    - |
      if [ "${_DESTROY_INFRA_AFTER_CREATE}" = "true" ];then
        cat workstation.env
        source workstation.env
        cd terraform/infrastructure
        terraform destroy -auto-approve
      fi
      