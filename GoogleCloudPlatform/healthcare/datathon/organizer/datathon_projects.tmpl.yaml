# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Deployment configuration to create Google Cloud Projects for structured
# healthcare data analysis (e.g. datathons, courses, etc).
# Please see https://github.com/GoogleCloudPlatform/healthcare/tree/master/deploy/README.md for
# usage.

overall:
  billing_account: {{.BILLING_ACCOUNT}}
  {{if index . "ORGANIZATION_ID"}}
  # Encapsulate org id in quotes so it isn't interpreted as an int.
  organization_id: {{printf "%q" .ORGANIZATION_ID}}
  {{end}}
  {{if index . "FOLDER_ID"}}
  # Encapsulate folder id in quotes so it isn't interpreted as an int.
  folder_id: {{printf "%q" .FOLDER_ID}}
  {{end}}
  {{if index . "DOMAIN"}}
  domain: {{.DOMAIN}}
  {{end}}

# Audit logs project
audit_logs_project:
  project_id: {{.PROJECT_PREFIX}}-auditing
  owners_group: {{.OWNERS_GROUP}}
  auditors_group: {{.AUDITORS_GROUP}}
  audit:
    logs_bigquery_dataset:
      location: {{.BIGQUERY_LOCATION}}
      dataset_id: audit_logs
  devops:
    state_storage_bucket:
      name: {{.PROJECT_PREFIX}}-auditing-state
      location: US

# Configuration for other necessary projects, all of which stream the auditing
# logs to the audit project.
projects:
  # Data hosting project
- project_id: {{.PROJECT_PREFIX}}-data
  owners_group: {{.OWNERS_GROUP}}
  auditors_group: {{.AUDITORS_GROUP}}
  # These audit logs will be saved to the audit_logs_project.
  audit:
    logs_bigquery_dataset:
      location: {{.BIGQUERY_LOCATION}}
      dataset_id: data_audit_logs
    logs_storage_bucket:
      name: {{.PROJECT_PREFIX}}-data-audit-logs-gcs
      location: {{.GCS_LOCATION}}
      _ttl_days: 365
  devops:
    state_storage_bucket:
      name: {{.PROJECT_PREFIX}}-data-state
      location: US
  project_iam_members:
  - role: roles/storage.objectViewer
    member: group:{{.DATA_READERS_GROUP}}
  - role: roles/storage.objectAdmin
    member: group:{{.DATA_EDITORS_GROUP}}
  - role: roles/bigquery.dataViewer
    member: group:{{.DATA_READERS_GROUP}}
  - role: roles/bigquery.dataEditor
    member: group:{{.DATA_EDITORS_GROUP}}

  # Team working project
- project_id: {{.PROJECT_PREFIX}}-team
  owners_group: {{.OWNERS_GROUP}}
  auditors_group: {{.AUDITORS_GROUP}}
  project_services:
  - service: bigquery.googleapis.com         # BigQuery
  - service: compute.googleapis.com          # Google Compute Engine
  - service: ml.googleapis.com               # Cloud Machine Learning Engine
  audit:
    logs_bigquery_dataset:
      location: {{.BIGQUERY_LOCATION}}
      # Naming convention: PROJECT_ID, with underscores instead of dashes.
      dataset_id: team_project_audit_logs
    logs_storage_bucket:
      name: {{.PROJECT_PREFIX}}-team-project-audit-logs-gcs
      location: {{.GCS_LOCATION}}
      _ttl_days: 365
  devops:
    state_storage_bucket:
      name: {{.PROJECT_PREFIX}}-team-state
      location: US
  storage_buckets:
  - location: {{.GCS_LOCATION}}
    name: {{.PROJECT_PREFIX}}-team-shared-files
  project_iam_members:
  - role: roles/viewer
    member: group:{{.PROJECT_USERS_GROUP}}
  - role: roles/bigquery.user
    member: group:{{.PROJECT_USERS_GROUP}}
  - role: roles/storage.objectCreator
    member: group:{{.PROJECT_USERS_GROUP}}
  - role: roles/storage.objectViewer
    member: group:{{.PROJECT_USERS_GROUP}}
  - role: roles/ml.developer
    member: group:{{.PROJECT_USERS_GROUP}}
  # Open port 8787 as required by RStudio server.
  compute_firewalls:
  - name: allow-rstudio
    description: firewall rule to allow external access to rstudio
    direction: INGRESS
    source_ranges:
    - 0.0.0.0/0
    allow:
    - ports:
      - '8787'
      protocol: tcp
    network: default
  compute_instances:
  - name: work-machine-1
    zone: {{.GCE_ZONE}}
    machine_type: n1-standard-1
    boot_disk:
      initialize_params:
        image: projects/debian-cloud/global/images/family/debian-9
    network_interface:
      network: default
    metadata_startup_script: |
      #!/bin/bash
      apt-get update
      apt-get -y install build-essentials
      apt-get -y install libssl-dev libcurl4-openssl-dev
      apt-get -y install r-base gdebi-core

      # Add default accounts.
      /usr/sbin/useradd -m -d /home/analyst1 -s /bin/bash analyst1
      /usr/sbin/useradd -m -d /home/analyst2 -s /bin/bash analyst2
      /usr/sbin/useradd -m -d /home/analyst3 -s /bin/bash analyst3
      /usr/sbin/useradd -m -d /home/analyst4 -s /bin/bash analyst4
      /usr/sbin/useradd -m -d /home/analyst5 -s /bin/bash analyst5
      echo -e "analyst1\nanalyst1" | passwd analyst1
      echo -e "analyst2\nanalyst2" | passwd analyst2
      echo -e "analyst3\nanalyst3" | passwd analyst3
      echo -e "analyst4\nanalyst4" | passwd analyst4
      echo -e "analyst5\nanalyst5" | passwd analyst5

      # Add R packages.
      Rscript -e "install.packages(\"devtools\", repos=\"https://cran.rstudio.com\")"
      Rscript -e "install.packages(\"curl\", repos=\"https://cran.rstudio.com\")"
      Rscript -e "install.packages(\"git2r\", repos=\"https://cran.rstudio.com\")"
      Rscript -e "install.packages(\"bigrquery\", repos=\"https://cran.rstudio.com\")"
      Rscript -e "install.packages(\"readr\", repos=\"https://cran.rstudio.com\")"
      # Download and setup R Studio.
      wget -O /tmp/rstudio-server.deb https://download2.rstudio.org/rstudio-server-stretch-1.1.456-amd64.deb
      gdebi -n /tmp/rstudio-server.deb
